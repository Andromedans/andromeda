exception Cow of mlstring ;;
exception Horn ;;
exception Tail ;;

let f e =
  match e with
  | Cow s -> Cow s
  | Horn -> Cow "horn"
  | Tail when ML.false -> Cow "wrong_tail"
  | Tail -> Cow "tail"
  end
;;

f (Cow "horn") ;;
f Horn ;;
f Tail ;;

handle
  ("foo", "bar")
with
| raise (Cow s) -> ("cow", s)
| raise Horn when ML.true -> ("horn", "")
end
;;

handle
  raise Horn
with
| raise (Cow s) -> ("cow", s)
| raise Horn when ML.true -> ("horn", "")
end
;;

handle
  handle
    raise Tail
  with
  | raise (Cow s) -> ("cow", s)
  | raise Horn when ML.true -> ("horn", "")
  end
with
| raise Tail -> ("tail", "")
end
;;

handle
  handle
    raise Tail
  with
  | raise e -> raise Horn
  end
with
| raise Tail -> "tail"
| raise Horn -> "horn"
end
;;
