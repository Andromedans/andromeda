let unit = {}
constant top : unit
constant unit_rect : ∀ (P : unit -> Type), (P top) -> ∀ (n : unit), P n

constant unit_iota_top : ∀ (P : unit -> Type) (s : P top), unit_rect P s top == s

let it = (λ (T : Type), unit_rect (λ (m), T -> T) (λ (x : T), x))

let action = top_beta unit_iota_top
#include "../std/equal_handle.m31"

(* TODO loops
check whnf (it unit top top)

check refl top : top == it unit top top

check refl top : top == (it unit) top top

check refl top : top == (it unit top) top

check refl top : top == ((it unit) top) top
*)
