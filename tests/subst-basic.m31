Let create :=
  fun X ->
    handle (λ [x : X] #throw x) with | #throw x _ -> x end.

Parameter A : Type.
Parameter a : A.
Parameter s : A -> A.

Let f := create @ (A -> A).

Check f (f a).

Check
  subst f := (λ [x : A] x) in f (f a).

Check
  subst f := (λ [x : A] (s (s x))) in f (f a).

Check f (f a).

Parameter B : Type.
Parameter P : B -> B -> Type.

Let u := create @ B.
Let v := create @ B.

Check P u v.

Check subst u := v and v := u in P u v.


