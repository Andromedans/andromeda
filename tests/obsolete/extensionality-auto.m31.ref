val eqext :> judgment

⊢ λ (A : Type) (a : A) (b : A) (p : a ≡ b) (_ : a ≡ b), refl p
  : Π (A : Type) (a : A) (b : A) (p : a ≡ b) (q : a ≡ b), p ≡ q

val funext :> judgment

⊢ λ (A : Type) (B : A → Type) (f : Π (x : A), B x)
    (g : Π (x : A), B x) (_ : Π (x : A), f x ≡ g x), refl f
  : Π (A : Type) (B : A → Type) (f : Π (x : A), B x)
    (g : Π (x : A), B x), (Π (x : A), f x ≡ g x) → f ≡ g

