Nat is defined.

Π (X : Type), (X -> X) -> X -> X
      : Type
zero is defined.

λ (A : Type) => λ (s : A -> A) => λ (z : A) => z
      : Π (X : Type), (X -> X) -> X -> X
one is defined.

λ (A : Type) => λ (s : A -> A) => λ (z : A) => s z
      : Π (X : Type), (X -> X) -> X -> X
two is defined.

λ (A : Type) => λ (s : A -> A) => λ (z : A) => s (s z)
      : Π (X : Type), (X -> X) -> X -> X
three is defined.

λ (A : Type) => λ (s : A -> A) => λ (z : A) => s (s (s z))
      : Π (X : Type), (X -> X) -> X -> X
succ is defined.

λ (n : Π (X : Type), (X -> X) -> X -> X) (B : Type) =>
  λ (s : B -> B) => λ (z : B) => s (n B s z)
      : (Π (X : Type), (X -> X) -> X -> X) ->
          Π (X : Type), (X -> X) -> X -> X
succ' is defined.

λ (n : Π (X : Type), (X -> X) -> X -> X) (A : Type) =>
  λ (s : A -> A) => λ (z : A) => n A s (s z)
      : (Π (X : Type), (X -> X) -> X -> X) ->
          Π (X : Type), (X -> X) -> X -> X
add is defined.

λ (m : Π (X : Type), (X -> X) -> X -> X)
  (n : Π (X : Type), (X -> X) -> X -> X) (A : Type) =>
  λ (s : A -> A) => λ (z : A) => m A s (n A s z)
      : (Π (X : Type), (X -> X) -> X -> X) ->
          (Π (X : Type), (X -> X) -> X -> X) ->
            Π (X : Type), (X -> X) -> X -> X
mult is defined.

λ (m : Π (X : Type), (X -> X) -> X -> X)
  (n : Π (X : Type), (X -> X) -> X -> X) (A : Type) =>
  λ (s : A -> A) => m A (n A s)
      : (Π (X : Type), (X -> X) -> X -> X) ->
          (Π (X : Type), (X -> X) -> X -> X) ->
            Π (X : Type), (X -> X) -> X -> X
N is assumed.

Z is assumed.

S is assumed.

refl ((λ (s : N -> N) =>
         λ (z : N) =>
           s
             ((λ (A : Type) =>
                 λ (s0 : A -> A) => λ (z0 : A) => s0 (s0 (s0 z0))) N s 
                z)) S Z)
      : (λ (s : N -> N) =>
           λ (z : N) =>
             (λ (A : Type) => λ (s0 : A -> A) => λ (z0 : A) => s0 z0) N s
               ((λ (A : Type) =>
                   λ (s0 : A -> A) => λ (z0 : A) => s0 (s0 (s0 z0))) N s 
                  z)) S Z
          == (λ (s : N -> N) =>
                ((λ (A : Type) =>
                    λ (s0 : A -> A) =>
                      λ (z : A) =>
                        (λ (A0 : Type) =>
                           λ (s1 : A0 -> A0) => λ (z0 : A0) => s1 z0) A s0
                          (s0 z)) ) N
                  ((λ (A : Type) =>
                      λ (s0 : A -> A) => λ (z : A) => s0 (s0 z)) N 
                     s)) S Z
