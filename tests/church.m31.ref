val Nat :> judgment

⊢ Π (X : Type), (X → X) → X → X : Type

val zero :> judgment

⊢ λ (A : Type) (_ : A → A) (z : A), z
  : Π (X : Type), (X → X) → X → X

val one :> judgment

⊢ λ (A : Type) (s : A → A) (z : A), s z
  : Π (X : Type), (X → X) → X → X

val two :> judgment

⊢ λ (A : Type) (s : A → A) (z : A), s (s z)
  : Π (X : Type), (X → X) → X → X

val three :> judgment

⊢ λ (A : Type) (s : A → A) (z : A), s (s (s z))
  : Π (X : Type), (X → X) → X → X

val succ :> judgment

⊢ λ (n : Π (X : Type), (X → X) → X → X) (B : Type) (s : B → B)
    (z : B), s (n B s z)
  : (Π (X : Type), (X → X) → X → X) →
    Π (X : Type), (X → X) → X → X

val succ' :> judgment

⊢ λ (n : Π (X : Type), (X → X) → X → X) (A : Type) (s : A → A)
    (z : A), n A s (s z)
  : (Π (X : Type), (X → X) → X → X) →
    Π (X : Type), (X → X) → X → X

val add :> judgment

⊢ λ (m : Π (X : Type), (X → X) → X → X)
    (n : Π (X : Type), (X → X) → X → X) (A : Type) (s : A → A)
    (z : A), m A s (n A s z)
  : (Π (X : Type), (X → X) → X → X) →
    (Π (X : Type), (X → X) → X → X) →
    Π (X : Type), (X → X) → X → X

val mult :> judgment

⊢ λ (m : Π (X : Type), (X → X) → X → X)
    (n : Π (X : Type), (X → X) → X → X) (A : Type) (s : A → A), m A
        (n A s)
  : (Π (X : Type), (X → X) → X → X) →
    (Π (X : Type), (X → X) → X → X) →
    Π (X : Type), (X → X) → X → X

Constant N is declared.

Constant Z is declared.

Constant S is declared.

⊢ refl
    ((λ (n : Π (X : Type), (X → X) → X → X) (B : Type) (s : B → B)
      (z : B), s (n B s z))
    (λ (A : Type) (s : A → A) (z : A), s (s (s z))) N S Z)
  : (λ (m : Π (X : Type), (X → X) → X → X)
     (n : Π (X : Type), (X → X) → X → X) (A : Type) (s : A → A)
     (z : A), m A s (n A s z)) (λ (A : Type) (s : A → A) (z : A), s z)
    (λ (A : Type) (s : A → A) (z : A), s (s (s z))) N S Z ≡
    (λ (m : Π (X : Type), (X → X) → X → X)
     (n : Π (X : Type), (X → X) → X → X) (A : Type) (s : A → A), m A
         (n A s))
    ((λ (n : Π (X : Type), (X → X) → X → X) (A : Type) (s : A → A)
      (z : A), n A s (s z)) (λ (A : Type) (s : A → A) (z : A), s z))
    (λ (A : Type) (s : A → A) (z : A), s (s z)) N S Z

