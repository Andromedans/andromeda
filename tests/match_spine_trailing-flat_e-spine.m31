Parameter unit : Type.
Parameter tt : unit.
Parameter unit_rect : âˆ€ (P : unit -> Type), (P tt) -> âˆ€ n : unit, P n.

Parameter unit_iota_tt : âˆ€ (P : unit -> Type) (s : P tt), unit_rect P s tt == s.

Let it := (fun (T : Type) => unit_rect (fun _ => T -> T) (fun x : T => x)).

Beta unit_iota_tt.

Check refl tt : tt == (unit_rect   (fun _ => unit -> unit)) (fun x : unit => x) tt tt.
Check refl tt : tt == (unit_rect   (fun _ => unit -> unit) (fun x : unit => x)) tt tt.
Check refl tt : tt == ((unit_rect  (fun _ => unit -> unit) (fun x : unit => x)) tt) tt.
Check refl tt : tt == (((unit_rect (fun _ => unit -> unit)) (fun x : unit => x)) tt) tt.
Check refl tt : tt == ((unit_rect  (fun _ => unit -> unit)) (fun x : unit => x)) tt tt.
