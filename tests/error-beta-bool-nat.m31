Parameter NarrowN : Type.
Parameter h : NarrowN == (N -> N).
Parameter danger : NarrowN == (bool -> N).
Check danger.
Check
  let f := (Î» (x : N) => x) in
  let f' :=
    beta h in
      f : NarrowN in
  let f' :=
    beta danger in
      f' : bool -> N in
  refl (f' true) : (f' true) == (f : N -> N) ((f' true) : N).
