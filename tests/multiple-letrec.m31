
let rec f x y = print ("f",x,y);
  match (x,y) with
    | (?a::?la,?b::?lb) => f ((g a b), (h la lb))
    | _ => ()
  end

and g a b = print ("g",a,b);
  a::[b]

and h la lb = print ("h",la,lb);
  rev_append la lb


constant A B : Type
constant a : A
constant b : B

do f [A,a] [B,b]


