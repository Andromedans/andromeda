let d =
  derive (A type) (u : A) (v : A) (u ≡ v : A as ξ) ({x : A} B type) ->
  congruence B{u} B{v} ξ :? (B{u} ≡ B{v} as ??)
;;

rule T type
rule a : T
rule b : T
rule S (_ : T) (_ : T) type
;;

derive (a ≡ b : T as ζ) -> d T a b ζ ({x : T} S x x)