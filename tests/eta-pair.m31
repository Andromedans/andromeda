Parameter Pair : Type -> Type -> Type.

Parameter pair :
  forall (A : Type) (B : Type),
    A -> (B -> (Pair A B)).

Parameter fst :
  forall (X : Type) (Y : Type), Pair X Y -> X.

Parameter snd :
  forall (X : Type) (Y : Type), Pair X Y -> Y.

Parameter pair_beta_fst :
  forall (U V : Type) (u : U) (v : V),
    (fst V U (pair V U v u)) == v.

Parameter pair_beta_snd :
  forall (U V : Type) (u : U) (v : V),
    (snd V U (pair V U v u)) == u.

Parameter pair_eta :
  forall (U V : Type) (x y : Pair U V),
    fst U V x == fst U V y ->
    snd U V x == snd U V y ->
    x == y.

Parameter C : Type.
Parameter D : Type.
Parameter p : Pair C D.

(* NB: Without beta hints, the eta hint will cycle. *)
Check
  beta pair_beta_fst in
  beta pair_beta_snd in
  eta pair_eta in
     refl p :: p == pair C D (fst C D p) (snd C D p).
