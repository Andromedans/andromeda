constant A : Type
constant B : Type
constant f : B → Type
constant P : ∏ (x : A), f x → Type
check
  assume e : A ≡ B in
  with local (lbeta e) handle
  assume x : A in
  assume Y : Type in
  assume h : Y ≡ P (f x) in

  assume X : Type in
  assume h : X ≡ f x in
  with local (lhint h) handle
  assume g : X → Type in
  assume z : g y in
    z

