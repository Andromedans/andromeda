(* External values *)

(* Print an arbitrary value *)
external print : mlforall a, a -> mlunit = "print"

(* Exit (finish the process) *)
external exit : mlforall a, mlunit -> a = "exit"

(* Print an arbitrary value in JSON format *)
external print_json : mlforall a, mlunit -> a = "print_json"

(* Compare values. The order type has tags mlless, mlequal, mlgreater. *)
external compare : mlforall a, a -> a -> mlorder = "compare"

(* Poor man's debugging mechanism. *)
mltype debug a = (!!) of a end
let debug x = print (!! x)

(* Top-level handlers default to failure. *)
(*
handle
  | equal _ _ ⇒ None
  | as_prod _ ⇒ None
  | as_eq _ ⇒ None
end
*)

let (|>) x f :> mlforall α β, α → (α → β) → β = f x

let failure x = print ("FAILURE", x); exit ()

mltype mlbool = mltrue | mlfalse end

let ( = ) x y =
  match compare x y with
  | mlequal => mltrue
  | _ => mlfalse
  end

(* operation whnf : judgement -> judgement *)

mltype eagerness =
  | eager
  | lazy
  end

(*
constant funext : forall (A : Type) (B : A -> Type) (f g : forall x : A, B x),
  (forall x : A, f x ≡ g x) -> f ≡ g

constant uip : forall (A : Type) (lhs rhs : A) (p q : lhs ≡ rhs), p ≡ q
*)

mltype empty = end
