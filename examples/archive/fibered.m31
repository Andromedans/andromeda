(** Fibered types. *)

Parameter Fib : Type → Type.

(* pretend these are the naturals. *)
Parameter ℕ : Type.
Parameter Z : ℕ.
Parameter S : ℕ → ℕ.

(* natural numbers are fibered *)
Parameter ℕ_fib : [[Fib ℕ]].
Inhabit ℕ_fib.

(* fibered types are preserved under products *)
Parameter prod_fib :
  Π [A : Type] [[Fib A]] →
    Π [B : A → Type]
      (Π [x : A] [[Fib (B x)]]) → [[Fib (Π [x : A] B x)]].

Parameter pi [A : Type] [B : A → Type] : Type.
Parameter pi_def : Π [A : Type] [B : A → Type] pi A B ≡ (Π [x : A] B x).

Parameter pi_fib :
  Π [A : Type] [[Fib A]] →
    Π [B : A → Type]
      (Π [x : A] [[Fib (B x)]]) → [[Fib (pi A B)]].

(* Identity types can only be formed when the type is fibered. *)
Parameter Id :
  Π [A : Type] [[Fib A]] → A → A → Type.

Parameter idpath :
  Π [A : Type] [p : [[Fib A]]] [x : A] Id A p x x.

Check idpath ℕ [] Z.

(* Our pattern matching is not good enough to use just "prod_fib",
  we need to instantiate the types. *)
Check (prod_fib ℕ [] (λ [_] ℕ)).

Check
  inhabit (prod_fib ℕ [] (λ [_] ℕ)) in
  [] :: [[Fib (ℕ → ℕ)]].

Check
  inhabit pi_fib in
  [] :: [[Fib (pi ℕ (λ [_] ℕ))]].

Inhabit pi_fib.
Hint pi_def.

(* JustWorks™ *)
Check idpath (pi ℕ (λ [_] ℕ)) [] (λ [n : ℕ] S (S n)).


(* alternatively, use ℕ→ℕ without a code for Π and inhabit that particular product *)
Check
  inhabit (prod_fib ℕ [] (λ [_] ℕ)) in
  idpath (ℕ → ℕ) [] (λ [n] S (S n)).


(* The elimination principle of fibred equality at fibred type A into fibred P *)
Parameter J_fib
          [A : Type]
          [fib_A : [[Fib A]]]
          [a : A]
          [P : Π [y : A] [e : Id A fib_A a y] Type]
          [fib_P : Π [y : A] [e : Id A fib_A a y] [[Fib (P y e)]]]
          [_ : P a (idpath A fib_A a)]
          [y : A]
          [p : Id A fib_A a y] :
  P y p.

Parameter J_iota :
  Π [A : Type]
    [fib_A : [[Fib A]]]
    [a : A]
    [P : Π [y : A] [e : Id A fib_A a y] Type]
    [fib_P : Π [y : A] [e : Id A fib_A a y] [[Fib (P y e)]]]
    [t : P a (idpath A fib_A a)]
  J_fib A fib_A a P fib_P t a (idpath A fib_A a) ≡ t.

Beta J_iota.

Parameter h : Id ℕ [] Z (S Z).

Check J_fib ℕ [] Z (λ [_ _] ℕ) (λ [_ _] []) Z (S Z) h.
