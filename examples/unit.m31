constant unit : Type
constant tt : unit

constant unit_rect : Π (P : unit -> Type) (x : P tt) (u : unit), P u
constant unit_iota : Π (P : unit -> Type) (x : P tt), unit_rect P x tt == x
constant unit_eta  : ∏ (x y : unit), x ≡ y
now etas = add_eta unit_eta

let unit_contractible :: ∀ (x : unit), x == tt =
    λ x, refl x
