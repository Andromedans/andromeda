#include_once "paths.m31" "paths_facts.m31".

Let UIP_aux :=
  λ [A : Type] [a b : A] [p q : paths A a b]
  paths_refl (paths A a b) (paths_of_eq A a b (eq_of_paths A a b p))
  ::
    paths
      (paths A a b)
      (paths_of_eq A a b (eq_of_paths A a b p))
      (paths_of_eq A a b (eq_of_paths A a b q)).

Let UIP :=
  (λ [A a b p q]
     beta (paths_eq_inv A a b p); (paths_eq_inv A a b q) in
       UIP_aux A a b p q) ::
    ∀ [A : Type] [a b : A] [p q : paths A a b]
      paths (paths A a b) p q.

Let UIP_strict :=
  (λ [A a b p q]
     beta (paths_eq_inv A a b p); (paths_eq_inv A a b q) in
       eq_of_paths (paths A a b) p q (UIP_aux A a b p q)) ::
    ∀ [A : Type] [a b : A] [p q : paths A a b]
      p ≡ q.
