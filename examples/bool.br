

Parameter bool : El [universe 0].
Parameter true false : El bool.

Parameter bool_ind : 
  El [forall (P : bool -> Universe 0) (b : bool), P true -> P false -> P b].
  PROD (P : El[bool] --> El[Universe 0]) (b : El[bool]), El[P true] --> El[P false] --> El[P b].

Parameter bool_ind_true :
  forall (P : bool -> Universe 0) (x : P true)  (y : P false),
    bool_ind P true x y == x

rewrite bool_ind_true

Parameter bool_ind_false :
  (P : bool -> Universe 0) -> (x : P true) -> (y : P false) ->
    bool_ind P false x y == y

rewrite bool_ind_false

define cond := fun (A : Universe 0) => bool_ind (fun (_ : bool) => A)

define cond_true :=
  fun (A : Universe 0) (x : A) (y : A) => (refl x :: cond A true x y == x)

