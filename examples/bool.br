Definition Type := Universe f0.

Parameter bool : Type.
Parameter true false : bool.

Parameter bool_ind :
  forall (P : bool -> Type) (b : bool), P true -> P false -> P b.

Parameter bool_ind_true :
  forall (P : bool -> Type) (x : P true)  (y : P false),
    bool_ind P true x y == x.

Rewrite bool_ind_true.

Parameter bool_ind_false :
  (P : bool -> Type) -> (x : P true) -> (y : P false) ->
    bool_ind P false x y == y.

Rewrite bool_ind_false.

Definition cond := fun (A : Type) => bool_ind (fun (_ : bool) => A).

Definition cond_true :=
  fun (A : Type) (x : A) (y : A) => (refl x :: cond A true x y == x).

